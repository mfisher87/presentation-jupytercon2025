---
title: "üåê GeoJupyter ü™ê"
subtitle: |
  _Exploring more approachable geospatial data workflows as a community_
authors:
  - name: "Matt Fisher @ Schmidt DSE, UC Berkeley"
    orcid: "0000-0003-3260-5445"
title-slide-attributes:
  data-notes: |
    Hello!
format:
  revealjs:
    from: "markdown+emoji"
    theme: "white"
    css: "assets/css/slides.css"
    footer: "[Home](/) | [Source](https://github.com/mfisher87/presentation-jupytercon2025) | [geojupyter.org](https://geojupyter.org)"
    auto-stretch: true
    slide-number: true
---

```{python}
from IPython.display import Markdown

def why_geojupyter(active: int | None = None) -> str:
  """Display the repeated "Why GeoJupyter" slide content."""
  items = [
    "Even experts often struggle",
    "Linked visualizations are difficult to build",
    "Friction when visualizing from a programming environment",
  ]
  lst = []
  for index, item in enumerate(items):
    if active is None:
      lst.append(f"* {item}")
    elif index == active:
      lst.append(f"* **{item}**")
    elif index < active:
      lst.append(f"* [~~{item}~~]{{.fade}}")
    elif index > active:
      lst.append(f"* [{item}]{{.fade}}")

  return Markdown(f"""
:face_with_head_bandage: Existing workflows are sometimes painfully imperfect.

{"\n".join(lst)}
""")
```

---

:::{.center-content}
![](/assets/images/just-use-blank.jpg){.r-stretch}
:::

:::notes
Let's talk about how hard it can be for data practitioners, whether that's
researchers, data scientists, or data artists, to adapt to working with their
data in a programming paradigm.

I think it's widely accepted that this is becoming a more and more necessary part of the job.
:::


---

:::{.center-content}
![](/assets/images/37-geospatial-python-packages-you-definitely-need.png){.r-stretch}
:::

:::notes
This is the first web result I get when I do this search on Google.

Imagine being told you _definitely_ need to learn 37 new tools to adapt to a
new way to do your job.

And as a software engineer, I see myself in these images, and I want to be better for my friends.
:::


## :wave: Hi, I'm Matt!

:::evenly-spaced
:computer: Research Software Engineer (RSE)

:people_holding_hands: Community Engagement Manager

:open_hands: Open source maintainer:
[jupytergis](https://github.com/geojupyter/jupytergis),
[earthaccess](https://github.com/nsidc/earthaccess),
several [conda-forge](https://conda-forge.org/) feedstocks,
more

:seedling: Working at Schmidt DSE @ UC Berkeley

:snowflake: Previously at National Snow & Ice Data Center (NSIDC)

:dog: :seedling: :notes: :musical_keyboard: :drum:
:::

:::notes
I'm Matt Fisher, and I'm a Research Software Engineer and Community Engagement
Manager for GeoJupyter.

Before GeoJupyter, I worked in building software for research support and data
analysis, visualization, management, and access at the National Snow and Ice Data
Center.

I'm a maintainer of several open source projects, and maybe we've spoken on GitHub before!
_earthaccess_ is one of my favorite community-owned projects I help maintain.
It enables access to NASA data in 3 lines of code, which is a huge improvement:
before _earthaccess_ you had to write >100 lines to authenticate and
interact with the NASA earth science data API.

I also love dogs, gardening, and playing music on drums and keyboards :grin:
:::


## :mega: In this talk...

:::::::::columns
::::::{.column width=75%}
* What is GeoJupyter?
<br />
<br />
* Why is GeoJupyter?
<br />
<br />
* What is JupyterGIS? :sparkles: Demo! :sparkles:
<br />
<br />
* How you can join the GeoJupyter community
::::::

::::::{.column width=25%}
:::{style="font-size: 90%"}
![[https://mfisher87.github.io/presentation-jupytercon2025](https://mfisher87.github.io/presentation-jupytercon2025)](/assets/images/qr.svg){width=100%}
:::
::::::
:::::::::

:::notes
In this talk, I'm going to introduce the GeoJupyter community and discuss why it exists.
I'll then introduce and the JupyterGIS software.
Finally, we'll talk about how you can join the community.
:::


## :heart: Thank you

{{< include logos.md >}}

:::notes
First, I'd like the thank everyone involved in this community effort.
**So many** people and organizations are working together to make cool stuff happen!

<!-- alex ignore special -->
Special thanks to QuantStack for leading the development of JupyterGIS.

And to Fernando P√©rez and the Schmidt Center for Data Science & Environment for
supporting me to work on this -- I'm having lots of fun :grin:
:::

---

![[_You don't need to contribute more to open source, you need to go to therapy_](https://youtu.be/kUrfsKlyZOk?si=L7Z0x9azuMvccseD&t=1541)](/assets/images/role-model.jpg){width=50%}


:::notes
One last big thank you to the amazing role models and mentors in these
communities who have inspired me to be a better community manager and
developer.

On that note, I want to give a quick plug for Yuvi Panda's lightning talk at SciPy this year:
_You don't need to contribute more to open source, you need to go to therapy_.

Click the link on this slide to watch!
:::


# :question: What is GeoJupyter?


## :people_holding_hands: It's a communtity!

![GeoJupyter is **not** software; it's a **community** which will build many things!](/assets/images/venn-diagram.svg)

:::notes
First and foremost, **GeoJupyter** is a community

**JupyterGIS** is our flagship project, led by QuantStack;
a GIS platform in JupyterLab that can be used in similar ways to QGIS plus more.
We'll talk more about JupyterGIS shortly.

But our work is far from limited to JupyterGIS; not everything we build is
going to be a huge project or GIS-first.
It depends on what our community (that's you!) tells us they need.
:::

---

![A photo of participants of a recent GeoJupyter Hackathon](/assets/images/hackathon-group-photo.jpg)


## :question: What is GeoJupyter?

<br />

<center>
:handshake: An effort to **democratize geospatial data practice** :handshake:
</center>

<br />

:::elevator-pitch
<hr />

GeoJupyter is an open and community-owned effort to [reimagine geospatial interactive
computing experiences]{.jupyter-orange} to enable **more people to
confidently engage with geospatial data**.

<hr />
:::

:::notes
_Read the slide_

Maybe the first thing that jumps out about this is how broad this mission is --
that's intentional.
We don't have all the solutions to this problem, but we know we can find them
by working with you.

What does it look like to **you** to **enable more people to confidently engage
with geospatial data**?

We want to hear from you, and I'll share how soon.
:::


## Our values

:::evenly-spaced
:open_hands: **Open source & open science**

:cartwheeling: **Approachability** and **playfulness**, like desktop GIS tools

:feather: **Flexibility** and **reproducibility**, like coding methods

:performing_arts: **Collaboration** and **storytelling**, like Jupyter Notebooks
:::

:::notes
We believe in open source and open science, so everything we do is free and
open.

And it's important to us to create tools that unify the strengths of current
tools and workflows.

Desktop GIS tools offer **approachability** and **playfulness**.

Coding methods offer **flexibility** and **reproducibility**.

And the Jupyter ecosystem offers **collaboration** and **storytelling**.
:::


---

![You got your chocolate in my peanut butter!](/assets/images/chocolate-peanut-butter.jpg)

:::notes
These values have historically been separate, but we believe they belong
together!

But it's not going to happen by accident :smile:
We've got work to do!
:::


## :shrug: Why GeoJupyter?

```{python}
why_geojupyter()
```

:::notes
Why are we doing this?

Because working with data about our planet is hard.

What we're bringing to the table is a holistic, human-centered, and
participatory approach to evaluating and improving this landscape.

So far we've conducted dozens of hours of user interviews to understand what folks need
most, and we'll continue to use the input of real people to guide our priorities.

The following are only a few examples of challenges we've heard from those
practitioners.

Many of these challenges have existing solutions, but they often involve
cobbling together multiple tools, introducing workflow friction.
:::


## :shrug: Why GeoJupyter?

```{python}
why_geojupyter(0)
```

:::notes
First, geospatial is hard, **even for experts**.

We **all** struggle sometimes.
:::


## Brianna's story

[_When our community burned, where was the satellite information?_](https://www.linkedin.com/pulse/when-our-community-burned-where-satellite-information-pag%C3%A1n-phd-8rxwf/?trackingId=goJI9VniOZAI3RGuoPXysA%3D%3D)

::::::columns
:::{.column width=25%}
![](/assets/images/brianna-pagan.jpg)
:::

:::{.column width=75%}
> ...we are failing the people and causes that need us the most.
:::
::::::

-- Brianna Pag√°n, Technical Program Lead @ Development Seed, ex-NASA Deputy DAAC Manager

:::notes
<!-- alex ignore her-him he-she fires -->
Brianna, who you may have heard speak yesterday, lost her home in the recent
fires in California.
When she learned her home was at risk, her first thought, like a true scientist
and geospatial nerd, was to look at the data.
Recounting these events, she wrote:

> I should be able to do this. I have a PhD in Remote Sensing, I have built satellite data
> processing pipelines, I help manage one of the NASA satellite data centers, I teach
> courses on climate resilience, adaptation and geoinformatics. [‚Ä¶] and yet the irony is
> that with all my experience I could not access the information I knew existed to help
> our community.

End-quote. You can read Brianna's full story by following the link at the top of the slide.
:::


## :shrug: Why GeoJupyter?

```{python}
why_geojupyter(1)
```

:::notes
Another pain point we hear is that folks want to visualize the same data in
different ways, and have those visualizations interactively linked.
:::


## Linked visualizations

![](/assets/images/jgis-linked-viz.jpg)

:::notes
For example, you might want to visualize soil samples on the map, but also
scatter plot those soil samples to find relationships between those samples'
attributes.

You may find spatial correlations you wouldn't have otherwise noticed by
interacting with variable correlations, and following those correlations back
to a map.

There's a package called "glue" that can do this, and it'd be really cool to
integrate that functionality with a GIS-first interface.
:::


## :shrug: Why GeoJupyter?

```{python}
why_geojupyter(2)
```

:::notes
Another challenge that we've heard widely reported by users is friction when
visualizing data about our planet from a programming environment, like a
Jupyter Notebook.

We've found many practitioners are perfectly comfortable writing code for
analysis, but visualizing data is an entirely different skill from analysis.
There's a wide variety of visualization libraries with unique and sometimes
frustrating interfaces.
It can be hard to choose, and each choice has a tradeoff.
Depending on the chosen library, practitioners may struggle to visualize many
datasets together, or to interact with the visualization in a meaningful way,
or to control the details of the visualization.

To get around this, practitioners described a process with many steps, like a dance.
We heard this so often that we gave it a name: "The GIS Bounce".
:::


## :woman_dancing: _The GIS Bounce_ :man_dancing: (hard mode)

::::::columns
:::{.column width=65%}
:abacus: Do some analysis

:floppy_disk: Write out a data file

:inbox_tray: Download it to local machine

:world_map: "Bounce" to QGIS, load basemap, load data file

:eyes: Validate, inspect, explore

:shower: "Bounce" back to Notebook and repeat
:::

:::{.column width=35%}
![](/assets/images/gis-bounce-hard.jpg)
:::
::::::

:::notes
To do the GIS bounce:

First, do some analysis.
Then, write out a data file to check your work so far.
If you're working in a cloud environment, download that data file.
"Bounce" over to QGIS, load up a basemap, and then finally load your data.
Now you can do your validation and "bounce" back to your notebook, and repeat!

That's a lot of steps, and they are repeated every time many practitioners
check their work -- a common and critical task.

Checking our work shouldn't be frustrating and time-consuming, it should be
seamless, joyful, and rewarding.
:::


<!-- alex ignore easy -->
## :woman_dancing: _The GIS Bounce_ :man_dancing: (easy mode)

::::::columns
:::{.column width=65%}
:abacus: Do some analysis

:snake: "Bounce" to JGIS: one line of code!

(Imports don't count :smirk:)

```python
from jupytergis import explore

explore(my_geodataframe)
```

:eyes: Validate, inspect, explore

:shower: "Bounce" back to Notebook and repeat
:::

:::{.column width=35%}
![](/assets/images/gis-bounce-easy.jpg)
:::
::::::

:::notes
So we developed an interface for this in JupyterGIS, a function called `explore()`.
It's still rough around the edges, but it's available now! :tada:

It enables the user to pass geospatial data directly to a visualization
environment running alongside their notebook with **one line of code**.
:::


## :shrug: Why GeoJupyter?

```{python}
why_geojupyter(3)
```

:::{style="font-size: 80%"}
_And much, much more!!_

* Friction reproducing GUI spatial processing
* Analyzing and visualizing features of vertical landscapes
:::

. . .

:::{style="font-size: 80%"}
...IDK, you tell us! :ear:
:::


:::notes
The landscape of open source geospatial tools is far from perfect.

...

There's a lot that needs solving, and we are far from having all the answers!
This is why we are building a community.
:::


# JupyterGIS {.nostretch}

:bangbang: Early development :bangbang:

![](/assets/images/logo-quantstack.png){width=50%}


:::notes
Let's talk about some of out work in progress now!

JupyterGIS is the _GeoJupyter_ flagship project, with development led by the amazing folks at QuantStack.
:::


## What is it? How is it different?

:::notes
_Read the slide_
:::

:::incremental
* Interactive GIS environment
* JupyterLab- and browser-native (try it in a JupyterHub!)
* Python API
* Supports QGIS project files
* WIP: STAC browser!
* **_Real-time collaboration_**: like Google Docs, but on a map!
:::

. . .

:house: All under one familiar roof (JupyterLab)!


---

![A screenshot of JupyterGIS](https://github.com/geojupyter/jupytergis/raw/main/jupytergis.png)


## Demo

:bulb: Lite: <https://jupytergis.readthedocs.io/en/latest/lite/lab/>

:test_tube: Lab: <http://localhost:8888>

:::notes
_Open in private window:_
<http://34.71.209.73:8888/>

First, let's look at "The GIS Bounce" we talked about earlier.

* _Open `explore.jgis`._
  * This notebook explores a dataset about the discrimatory US government
    practice of "redlining" from the 1930s-1960s.
    Redlining was a practice of grading neighborhoods to financially exclude
    people on the basis of race.
* _Run the notebook cell by cell, except the final cell_
  * We've got some data and we want to validate it before continuing our analysis..
  * Calling `.plot()` doesn't get us very far; it would be challenging to verify the data is properly geolocated without a basemap.
  * We would need to write more code to inspect the features' attributes.
  * That's where the `explore()` function we discussed comes in!
  * With only one line of code, excluding imports, we can interact with this data much like we would in QGIS.
* _Run final cell. Right click the "New Haven" layer, zoom to it._
  * The geolocation looks good.
  * Let's inspect the features and be sure those look the way we expect, too.
  <!-- alex ignore white -->
  * We can see that this neighborhood was ranked "A" ("best") because it was
    mostly white, meaning that home loans were more readily available,
    leading to generational harm.
  * Now that we've explored our data, we can go back to our example analysis and
    continue.
    We could close this panel and re-open it again later.
  * Or, because this visualizer is in a JupyterLab window, we can move it
    around and scale it however we like, leaving it available for more
    visualization later.
* _Move the window to a bottom pane and scale it way down._

Let's explore some example JupyterGIS projects.

* _Open `france_hiking.jGIS` from JupyterLab file explorer._
  * This example JupyterGIS project file and many more are distributed with
    JupyterGIS, and you can check it out in your browser with JupyterLite from
    the "Try it now!" link in our README and docs.
  * This map shows hiking trails in France.
  * It's a bit noisy right now, so let's get rid of this MODIS layer.
* _Right click NAGAGIBS layer, remove._
  * Let's add a layer that shows where Strava users are running.
* _Open the layer browser._
  * Our layer browser has a bunch of pre-defined layers you can add to your map
* _Add "Strava.Run"._
  * The hiking layer is a bit hard to read now, though, so let's change the layer order.
* _Move "Strava.Run" underneath "Waymarked"._
  * Still a bit hard to read, let's change the opacity.
* _Set opacity of "Waymarked" to 1._
  * That's better!

Let's change it up and look at some earthquakes data.

<!-- alex ignore color -->
* _Open `earthquakes.jgis`._
* _Activate the identify tool._
  * We have an "identify" tool that enables you to view attributes of these features.
* _Select a feature._
  * We can see the earthquake's magnitude and timestamp.
    It'd be nice to visualize this on the map.
* _Open symbology for earthquakes._
  * Let's set the symbology to "graduated" and select the attribute we want to symbologize on :smile:
  * We want to use color to represent the magnitude, and use a quantile scale.
* _Click "classify"._
  * Beautiful.
  * Now, I want to view this data over time.
* _Open the time slider._
  * Let's select the correct time attribute and set a time step of "daily".
* _Scrub with slider._
  * And let's animate it at 10 FPS.
* _Select 10FPS, press play._
  * Someone mentioned the other day that it would be cool to persist the past
    points when animating to see accumulation.
    Love that idea, and we have an open issue in GitHub where you can follow along.

_Collaborative demo:_

* Nick: _Join collaborative session on earthquakes.jGIS_
* Nick: _Add `WaymarkedTrails.Slopes` layer_
* Nick: _Disable the earthquakes layer_
* Nick: _Add an annotation at the base of a trail "Let's meet here at **Aerial Tram** on Friday"_
* Matt: Looks someone's trying to collaborate with me! Who could that be? :thinking:
* Nick: _Raise hand!_
<!-- alex ignore he-she -->
* Matt: That's Nick Gondek, my co-worker.
  Looks like he's having trouble focusing on my talk and looking forward to
  some skiing :)
* Matt: Nick is shown here as a collaborator on this JupyterGIS project.
* Matt: _Follow Nick_.
* Matt: I'm using the "Follow" feature to see what Nick is doing.
* Matt: I see Nick has added an "Annotation", our name for a geospatial
  conversation in JGIS.
* Matt: _Respond to annotation: "Sounds awesome! Meet you there."_
* Nick: _Add another annotation for a run from the top of **Aerial Tram**, let's
  take **Chip's run** down to the hotel._
* Matt: _Respond to annotation: Siiick!_
* Matt: I think we're done planning our post-conference recreation, I guess
  let's finish up this talk :laughing:

:warning: **If something goes wrong** :warning:

* That's what I get for doing a live demo.
<!-- alex ignore fire -->
* I knew a live demo with collaborators was playing with fire.
  I've flown too close to the sun, sorry for my hubris :laughing:
<!-- alex ignore just -->
* _Open browser debug tools_. **Hold on, I can fix this!!** Just kidding, let's move on :smile:
* Come talk to me later and I'll tell you or show you more :smile:
:::


<!-- alex ignore just -->
## Demo recording (just in case)

{{< video /assets/video/jgis-demo.mp4 >}}


## How you can join

{{< include how-you-can-join.md >}}

:::notes
I'm sure you're wondering "how can I be a part of this rad community?"

There are lots of ways you can join our community and be a part of this mission.

We'd love to talk to you about your needs, frustrations, and opinions in an interview.

It would be amazing to see you at one of our bi-weekly hackathons or monthly community meetings!
You can view our community calendar on `geojupyter.org` or by following the link on this slide.

We also have a community chat on Zulip, which is like an open-source Slack.
You don't even need to register an account to view our activity, but we would
love it if you joined in :smile:

JupyterGIS is available for install with `pip`, `conda`, or equivalents, and we're
jazzed to hear what you think :smile:

We're excited to expand our **funded** development team, so if your company is
interested in sponsoring this work, please reach out.
We are still exploring what this will look like, and while GeoJupyter will
always be community owned, we're ready to work with folks whose goals align
with ours.

If you have any questions, you can always reach out to me on Zulip, GitHub, or email.
:::


# :heart: Thank you! :heart:

:::notes
Thanks for your time and attention, and I hope to see you around :smile:

_Advance to next slide_
:::


# :tada: Bonus slides

---

{{< include logos.md >}}


## FAQ {.smaller .scrollable}

* :neutral_face: What about _\<existing tool\>_?
  <!-- alex ignore kids -->
  * :fire: We understand we're the "new kids on the block" and we're coming in hot.
  * We are interested in building on the amazing progress of recent decades and
    learning lessons from modern users.
  <!-- alex ignore bigger -->
  * Understanding geographic space and scale is centuries in the making, bigger
    than any company or project, including ours.
* :stopwatch: Timeline?
  * :sparkles: [JupyterGIS available to install right now](https://jupytergis.readthedocs.io/en/latest/user_guide/install.html)!
  * :shrug: It depends! We're listening to users to identify priorities.
  * STAC browser expected this year.


# :clown_face: Memes that were too mid

---

![](/assets/images/just-want-a-map.jpg)

---

![](/assets/images/why-cant-i-remember-all-these-geospatial-viz-apis.jpeg)
